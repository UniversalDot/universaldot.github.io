"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1096],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7321:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:1},s="Nodes",c={unversionedId:"network/nodes",id:"network/nodes",title:"Nodes",description:"Nodes are decentralized systems that provide compute resources that keep the network running.",source:"@site/docs/network/nodes.md",sourceDirName:"network",slug:"/network/nodes",permalink:"/docs/network/nodes",editUrl:"https://github.com/UniversalDot/udot-wiki/tree/master/wiki/docs/network/nodes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Organizations",permalink:"/docs/guides/organization"},next:{title:"Community",permalink:"/docs/network/community"}},u={},p=[{value:"Setup a Node",id:"setup-a-node",level:2},{value:"Connect to a Node",id:"connect-to-a-node",level:2},{value:"Validator",id:"validator",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nodes"},"Nodes"),(0,a.kt)("p",null,"Nodes are decentralized systems that provide compute resources that keep the network running. "),(0,a.kt)("p",null,"Nodes provide computational resources that process transactions and store data."),(0,a.kt)("h2",{id:"setup-a-node"},"Setup a Node"),(0,a.kt)("p",null,"There are two types of Nodes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Full Node: Contains the complete technology stack."),(0,a.kt)("li",{parentName:"ul"},"Light Node: Contains a limited set of essential components to run the application.")),(0,a.kt)("p",null,"For detail steps on how to deploy your own Full of Light node, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/sdk/deployment"},"Deployment")," Page."),(0,a.kt)("h2",{id:"connect-to-a-node"},"Connect to a Node"),(0,a.kt)("p",null,"In cases you are running a Light Node, there are some configuration parameters that might need to be configured for the application to connect correctly. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="configuration parameters"',title:'"configuration','parameters"':!0},"IPFS CLUSSTER = {HOST IP}\nSUBSTRATE = {HOST IP}\nTENSORFLOW = {HOST IP}\n")),(0,a.kt)("h2",{id:"validator"},"Validator"),(0,a.kt)("p",null,"As a validator, you can provide computing resources to the application. The recommended spec for running a validator are the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CPU - Intel(R) Core(TM) i7-7700K CPU @ 4.20GHz\nStorage - An NVMe solid state drive of 1 TB (As it should be reasonably sized to deal with blockchain growth).\nMemory - 64GB ECC.\n")),(0,a.kt)("p",null,"For a step-by-step guide on how to setup your own validator, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/sdk/deployment"},"Deployment")," page"))}m.isMDXComponent=!0}}]);